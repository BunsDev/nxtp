/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  LPToken,
  LPTokenInterface,
} from "../../../../../contracts/core/connext/helpers/LPToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112c0806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d714610232578063a9059cbb14610245578063ba9a7a5614610258578063dd62ed3e14610261578063f2fde38b1461029a57600080fd5b8063715018a6146101f457806379cc6790146101fc5780638da5cb5b1461020f57806395d89b411461022a57600080fd5b8063313ce567116100e9578063313ce56714610181578063395093511461019057806340c10f19146101a35780634cd88b76146101b857806370a08231146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102ad565b6040516101309190610e4a565b60405180910390f35b61014c610147366004610ebb565b61033f565b6040519015158152602001610130565b6035545b604051908152602001610130565b61014c61017c366004610ee5565b610357565b60405160128152602001610130565b61014c61019e366004610ebb565b61037b565b6101b66101b1366004610ebb565b6103ba565b005b61014c6101c6366004610fc4565b61045b565b6101606101d9366004611028565b6001600160a01b031660009081526033602052604090205490565b6101b6610537565b6101b661020a366004610ebb565b61056d565b6065546040516001600160a01b039091168152602001610130565b6101236105ea565b61014c610240366004610ebb565b6105f9565b61014c610253366004610ebb565b61068b565b6101606103e881565b61016061026f36600461104a565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6101b66102a8366004611028565b610699565b6060603680546102bc9061107d565b80601f01602080910402602001604051908101604052809291908181526020018280546102e89061107d565b80156103355780601f1061030a57610100808354040283529160200191610335565b820191906000526020600020905b81548152906001019060200180831161031857829003601f168201915b5050505050905090565b60003361034d818585610734565b5060019392505050565b600033610365858285610858565b6103708585856108ea565b506001949350505050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061034d90829086906103b59087906110cd565b610734565b6065546001600160a01b031633146103ed5760405162461bcd60e51b81526004016103e4906110e5565b60405180910390fd5b806000036104365760405162461bcd60e51b815260206004820152601660248201527504c50546f6b656e3a2063616e6e6f74206d696e7420360541b60448201526064016103e4565b60355460000361044d5761044d60016103e8610ac3565b6104578282610ac3565b5050565b60008054610100900460ff166104775760005460ff161561047b565b303b155b6104de5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103e4565b600054610100900460ff16158015610500576000805461ffff19166101011790555b610508610bae565b6105128484610bd5565b61051a610c1a565b600191508015610530576000805461ff00191690555b5092915050565b6065546001600160a01b031633146105615760405162461bcd60e51b81526004016103e4906110e5565b61056b6000610c46565b565b6065546001600160a01b031633146105975760405162461bcd60e51b81526004016103e4906110e5565b806000036105e05760405162461bcd60e51b815260206004820152601660248201527504c50546f6b656e3a2063616e6e6f74206275726e20360541b60448201526064016103e4565b6104578282610c98565b6060603780546102bc9061107d565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091908381101561067e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103e4565b6103708286868403610734565b60003361034d8185856108ea565b6065546001600160a01b031633146106c35760405162461bcd60e51b81526004016103e4906110e5565b6001600160a01b0381166107285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e4565b61073181610c46565b50565b6001600160a01b0383166107965760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e4565b6001600160a01b0382166107f75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e4565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526034602090815260408083209386168352929052205460001981146108e457818110156108d75760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e4565b6108e48484848403610734565b50505050565b6001600160a01b03831661094e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e4565b6001600160a01b0382166109b05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e4565b6109bb838383610df2565b6001600160a01b03831660009081526033602052604090205481811015610a335760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e4565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610a6a9084906110cd565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ab691815260200190565b60405180910390a36108e4565b6001600160a01b038216610b195760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103e4565b610b2560008383610df2565b8060356000828254610b3791906110cd565b90915550506001600160a01b03821660009081526033602052604081208054839290610b649084906110cd565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff1661056b5760405162461bcd60e51b81526004016103e49061111a565b600054610100900460ff16610bfc5760405162461bcd60e51b81526004016103e49061111a565b6036610c0883826111b3565b506037610c1582826111b3565b505050565b600054610100900460ff16610c415760405162461bcd60e51b81526004016103e49061111a565b61056b335b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610cf85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103e4565b610d0482600083610df2565b6001600160a01b03821660009081526033602052604090205481811015610d785760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103e4565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610da7908490611273565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b306001600160a01b03831603610c155760405162461bcd60e51b815260206004820152601e60248201527f4c50546f6b656e3a2063616e6e6f742073656e6420746f20697473656c66000060448201526064016103e4565b600060208083528351808285015260005b81811015610e7757858101830151858201604001528201610e5b565b81811115610e89576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610eb657600080fd5b919050565b60008060408385031215610ece57600080fd5b610ed783610e9f565b946020939093013593505050565b600080600060608486031215610efa57600080fd5b610f0384610e9f565b9250610f1160208501610e9f565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610f4857600080fd5b813567ffffffffffffffff80821115610f6357610f63610f21565b604051601f8301601f19908116603f01168101908282118183101715610f8b57610f8b610f21565b81604052838152866020858801011115610fa457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610fd757600080fd5b823567ffffffffffffffff80821115610fef57600080fd5b610ffb86838701610f37565b9350602085013591508082111561101157600080fd5b5061101e85828601610f37565b9150509250929050565b60006020828403121561103a57600080fd5b61104382610e9f565b9392505050565b6000806040838503121561105d57600080fd5b61106683610e9f565b915061107460208401610e9f565b90509250929050565b600181811c9082168061109157607f821691505b6020821081036110b157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156110e0576110e06110b7565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610c1557600081815260208120601f850160051c8101602086101561118c5750805b601f850160051c820191505b818110156111ab57828155600101611198565b505050505050565b815167ffffffffffffffff8111156111cd576111cd610f21565b6111e1816111db845461107d565b84611165565b602080601f83116001811461121657600084156111fe5750858301515b600019600386901b1c1916600185901b1785556111ab565b600085815260208120601f198616915b8281101561124557888601518255948401946001909101908401611226565b50858210156112635787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082821015611285576112856110b7565b50039056fea26469706673582212205167421db18f0b42991e751ccd7be6cea34bb15cc853f10a32baf039577ff13c64736f6c634300080f0033";

type LPTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPToken__factory extends ContractFactory {
  constructor(...args: LPTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LPToken> {
    return super.deploy(overrides || {}) as Promise<LPToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LPToken {
    return super.attach(address) as LPToken;
  }
  override connect(signer: Signer): LPToken__factory {
    return super.connect(signer) as LPToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPTokenInterface {
    return new utils.Interface(_abi) as LPTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPToken {
    return new Contract(address, _abi, signerOrProvider) as LPToken;
  }
}
